//
//  HTTPHeader.swift
//  
//
//  Created by Mykhailo Haidan on 02/10/2025.
//

import Foundation

/// A representation of a single HTTP header's field / value pair.
struct HTTPHeader: Hashable, Sendable {
    /// Name of the header.
    let field: String

    /// Value of the header.
    let value: String
}

extension HTTPHeader: CustomStringConvertible {
    var description: String {
        return "\(field): \(value)"
    }
}

// MARK: - Helper methods

extension HTTPHeader {

    /// Returns an `Accept-Language` header.
    static func acceptLanguage(_ value: String) -> HTTPHeader {
        return HTTPHeader(field: "Accept-Language", value: value)
    }

    /// Returns a `Content-Type` header.
    static func contentType(_ value: String) -> HTTPHeader {
        return HTTPHeader(field: "Content-Type", value: value)
    }

    /// Returns a `User-Agent` header.
    static func userAgent(_ value: String) -> HTTPHeader {
        return HTTPHeader(field: "User-Agent", value: value)
    }

    /// Returns an `Authorization` header.
    static func authorization(_ value: String) -> HTTPHeader {
        return HTTPHeader(field: "Authorization", value: value)
    }

    /// Returns a `Bearer` `Authorization` header using the `bearerToken` provided
    static func authorization(bearerToken: String) -> HTTPHeader {
        return authorization("Bearer \(bearerToken)")
    }
}

// MARK: - Default app headers

extension HTTPHeader {
    /// Returns the default `Content-Type` header.
    static let defaultContentType: HTTPHeader = {
        return .contentType("application/json; charset=utf-8")
    }()

    /// Returns the default `Accept-Language` header, generated by querying the user's current `Locale` identifier.
    static let defaultAcceptLanguage: HTTPHeader = {
        .acceptLanguage(Locale.current.identifier)
    }()
}
